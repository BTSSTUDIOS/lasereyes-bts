## Generate release notes and create GitHub release
#  generate-release-notes:
#    runs-on: ubuntu-latest
#    needs: promote-to-stable-in-main
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#          fetch-depth: 0
#        with:
#
#      - name: Setup Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.x'
#
#      - name: Install Python dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install openai==0.28 requests
#        env:
#          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#
#      - name: Generate git diff
#        run: |
#          PREV_COMMIT=$(git rev-parse HEAD^1)
#          git diff $PREV_COMMIT HEAD > changes.diff
#
#      - name: Generate release notes with GPT
#        run: |
#          set -e
#          python3 scripts/generate_release_notes.py
#        env:
#          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#
#      - name: Configure git user
#        run: |
#          git config --global user.email "github-actions[bot]@users.noreply.github.com"
#          git config --global user.name "github-actions[bot]"
#
#      - name: Concatenate release notes
#        run: |
#          echo -e "\n$(cat detailed_release_notes.md)\n$(cat RELEASE_NOTES.md)" > RELEASE_NOTES.md
#          git add RELEASE_NOTES.md
#          git commit -m "Updated RELEASE_NOTES.md with new release"
#          git push origin main
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Create GitHub Release
#        uses: actions/create-release@v1
#        with:
#          tag_name: "${{ github.ref }}"
#          release_name: "Release ${{ github.ref }}"
#          body_path: RELEASE_NOTES.md
#          draft: false
#          prerelease: false
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
