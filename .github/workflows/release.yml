name: Release

on:
  push:
    branches:
      - dev
      - main
permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Fetch all branches
        run: git fetch --all

      - name: Check if lasereyes, lasereyes-core, or lasereyes-react packages changed
        id: check_package_changes
        run: |
          if git diff --name-only HEAD^1 HEAD | grep -q 'packages/lasereyes/'; then
            echo "lasereyes_changed=true" >> $GITHUB_ENV
          else
            echo "lasereyes_changed=false" >> $GITHUB_ENV
          fi
          
          if git diff --name-only HEAD^1 HEAD | grep -q 'packages/lasereyes-core/'; then
            echo "lasereyes_core_changed=true" >> $GITHUB_ENV
          else
            echo "lasereyes_core_changed=false" >> $GITHUB_ENV
          fi

          if git diff --name-only HEAD^1 HEAD | grep -q 'packages/lasereyes-react/'; then
            echo "lasereyes_react_changed=true" >> $GITHUB_ENV
          else
            echo "lasereyes_react_changed=false" >> $GITHUB_ENV
          fi

      # Bump versions for lasereyes-core and lasereyes-react, but do not release them individually
      - name: Bump version for lasereyes-core (dev)
        if: ${{ env.lasereyes_core_changed == 'true' && github.ref == 'refs/heads/dev' }}
        run: |
          cd packages/lasereyes-core
          npm version prerelease --preid=rc
          cd ../../
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump version for lasereyes-react (dev)
        if: ${{ env.lasereyes_react_changed == 'true' && github.ref == 'refs/heads/dev' }}
        run: |
          cd packages/lasereyes-react
          npm version prerelease --preid=rc
          cd ../../
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Bump version for lasereyes based on any changes to lasereyes-core or lasereyes-react
      - name: Bump version for lasereyes (dev)
        if: ${{ (env.lasereyes_changed == 'true' || env.lasereyes_core_changed == 'true' || env.lasereyes_react_changed == 'true') && github.ref == 'refs/heads/dev' }}
        run: |
          cd packages/lasereyes
          npm version prerelease --preid=rc
          cd ../../
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit version bumps and changelog for dev
        if: ${{ (env.lasereyes_changed == 'true' || env.lasereyes_core_changed == 'true' || env.lasereyes_react_changed == 'true') && github.ref == 'refs/heads/dev' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "RC version bump for lasereyes packages"
          git pull --rebase origin dev
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Bump versions for main branch (patch releases)
      - name: Bump version for lasereyes (main)
        if: ${{ (env.lasereyes_changed == 'true' || env.lasereyes_core_changed == 'true' || env.lasereyes_react_changed == 'true') && github.ref == 'refs/heads/main' }}
        id: bump_lasereyes
        run: |
          cd packages/lasereyes
          new_version=$(npm version patch)
          echo "lasereyes_version=${new_version}" >> $GITHUB_ENV
          cd ../../
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit version bumps and changelog for main
        if: ${{ (env.lasereyes_changed == 'true' || env.lasereyes_core_changed == 'true' || env.lasereyes_react_changed == 'true') && github.ref == 'refs/heads/main' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main
          git pull origin main
          git add .
          git commit -m "Version bump after merge to main for lasereyes packages"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sync main to dev and bump dev version after merge
        if: ${{ github.ref == 'refs/heads/main' && (env.lasereyes_changed == 'true' || env.lasereyes_core_changed == 'true' || env.lasereyes_react_changed == 'true') }}
        run: |
          git checkout dev
          git pull origin dev
          git merge -X theirs origin/main
          if [ "${{ env.lasereyes_changed }}" == "true" ]; then
            cd packages/lasereyes
            npm version prerelease --preid=rc
            cd ../../
          fi
          if [ "${{ env.lasereyes_core_changed }}" == "true" ]; then
            cd packages/lasereyes-core
            npm version prerelease --preid=rc
            cd ../../
          fi
          if [ "${{ env.lasereyes_react_changed }}" == "true" ]; then
            cd packages/lasereyes-react
            npm version prerelease --preid=rc
            cd ../../
          fi
          git add .
          git commit -m "Bump dev version after main sync for lasereyes packages"
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Install Python and generate release notes only for lasereyes
      - name: Setup Python and install dependencies
        if: ${{ github.ref == 'refs/heads/main' && env.lasereyes_changed == 'true' }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
        run: |
          python -m pip install --upgrade pip
          pip install openai==0.28
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Generate git diff
        if: ${{ github.ref == 'refs/heads/main' && env.lasereyes_changed == 'true' }}
        run: |
          PREV_COMMIT=$(git rev-parse HEAD^1)
          git diff $PREV_COMMIT HEAD > changes.diff

      - name: Generate release notes with GPT
        if: ${{ github.ref == 'refs/heads/main' && env.lasereyes_changed == 'true' }}
        run: |
          python3 scripts/generate_release_notes.py ${{ env.lasereyes_version }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Concatenate release notes
        if: ${{ github.ref == 'refs/heads/main' && env.lasereyes_changed == 'true' }}
        run: |
          git checkout main
          git pull origin main
          echo -e "\n$(cat detailed_release_notes.md)\n$(cat RELEASE_NOTES.md)" > RELEASE_NOTES.md
          git add RELEASE_NOTES.md
          git commit -m "Updated RELEASE_NOTES.md with new release"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create GitHub release only for lasereyes
      - name: Create GitHub Release
        if: ${{ env.lasereyes_changed == 'true' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ env.lasereyes_version }}"
          release_name: "Release ${{ env.lasereyes_version }}"
          body_path: detailed_release_notes.md
          draft: false
          prerelease: false

      - name: Post Setup pnpm
        run: echo "Workflow completed!"
