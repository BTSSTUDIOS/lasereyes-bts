name: Release

on:
  push:
    branches:
      - dev
      - main
permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Fetch all branches
        run: git fetch --all

      - name: Check if lasereyes package changed
        id: check_lasereyes_changes
        run: |
          if pnpm changeset status | grep -q lasereyes; then
            echo "changed=true" >> $GITHUB_ENV
          else
            echo "changed=false" >> $GITHUB_ENV
          fi

      - name: Add Changeset if lasereyes package changed
        if: ${{ env.changed == 'true' }}
        run: |
          pnpm changeset add --empty --force --message "chore: auto-bump lasereyes version (patch)"

      # On Dev: Run version bump for RC versions
      - name: Run Changesets version bump for dev
        if: ${{ env.changed == 'true' && github.ref == 'refs/heads/dev' }}
        run: pnpm changeset version

      # Commit version bumps and changelog for dev
      - name: Commit version bumps and changelog for dev
        if: ${{ env.changed == 'true' && github.ref == 'refs/heads/dev' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "RC version bump for lasereyes"
          git pull --rebase origin dev
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # On Main: Bump stable version
      - name: Run Changesets version bump for main
        if: ${{ github.ref == 'refs/heads/main' && env.changed == 'true' }}
        run: |
          # Check the current version in package.json
          CURRENT_VERSION=$(cat packages/lasereyes/package.json | grep '"version":' | sed 's/[",]//g' | awk '{print $2}')
          
          # If it's an RC version (e.g., 0.0.8-rc.0), strip the RC and increment to stable (e.g., 0.0.8)
          if [[ $CURRENT_VERSION == *"-rc"* ]]; then
            STABLE_VERSION=$(echo $CURRENT_VERSION | sed 's/-rc.[0-9]*//')
            pnpm version $STABLE_VERSION
          else
            # Otherwise, just do a patch version increment
            pnpm version patch
          fi

      # Commit version bumps and changelog for main
      - name: Commit version bumps and changelog for main
        if: ${{ github.ref == 'refs/heads/main' && env.changed == 'true' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Version bump after merge to main for lasereyes"
          git pull --rebase origin main
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # On Dev: Bump to the next rc version after merge to main
      - name: Bump RC version for dev after merging to main
        if: ${{ github.ref == 'refs/heads/main' && env.changed == 'true' }}
        run: |
          CURRENT_VERSION=$(cat packages/lasereyes/package.json | grep '"version":' | sed 's/[",]//g' | awk '{print $2}')
          # Increment to the next rc version (e.g., from 0.0.8 -> 0.0.9-rc.0)
          NEXT_RC_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF = $NF + 1; print}')
          pnpm version $NEXT_RC_VERSION-rc.0

      - name: Post Setup pnpm
        run: echo "Workflow completed!"
