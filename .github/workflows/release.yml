name: Release

on:
  push:
    branches:
      - dev
      - main

permissions:
  contents: write

jobs:
  # Check for changes and output flags
  check-package-changes:
    runs-on: ubuntu-latest
    outputs:
      lasereyes_changed: ${{ steps.check.outputs.lasereyes_changed }}
      lasereyes_core_changed: ${{ steps.check.outputs.lasereyes_core_changed }}
      lasereyes_react_changed: ${{ steps.check.outputs.lasereyes_react_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch all branches
        run: git fetch --all

      - name: Check if packages changed
        id: check
        run: |
          if git diff --name-only origin/main...HEAD | grep -q "packages/lasereyes/"; then
            echo "lasereyes_changed=true" >> $GITHUB_ENV
            echo "lasereyes_changed=true" >> $GITHUB_OUTPUT
          else
            echo "lasereyes_changed=false" >> $GITHUB_ENV
            echo "lasereyes_changed=false" >> $GITHUB_OUTPUT
          fi

          if git diff --name-only origin/main...HEAD | grep -q "packages/lasereyes-core/"; then
            echo "lasereyes_core_changed=true" >> $GITHUB_ENV
            echo "lasereyes_core_changed=true" >> $GITHUB_OUTPUT
          else
            echo "lasereyes_core_changed=false" >> $GITHUB_ENV
            echo "lasereyes_core_changed=false" >> $GITHUB_OUTPUT
          fi

          if git diff --name-only origin/main...HEAD | grep -q "packages/lasereyes-react/"; then
            echo "lasereyes_react_changed=true" >> $GITHUB_ENV
            echo "lasereyes_react_changed=true" >> $GITHUB_OUTPUT
          else
            echo "lasereyes_react_changed=false" >> $GITHUB_ENV
            echo "lasereyes_react_changed=false" >> $GITHUB_OUTPUT
          fi

  # Release candidate bumps in dev branch
  bump-rc-in-dev:
    runs-on: ubuntu-latest
    needs: check-package-changes
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Bump version for lasereyes-core (RC)
        if: ${{ needs.check-package-changes.outputs.lasereyes_core_changed == 'true' }}
        run: |
          cd packages/lasereyes-core
          npm version prerelease --preid=rc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump version for lasereyes-react (RC)
        if: ${{ needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          cd packages/lasereyes-react
          npm version prerelease --preid=rc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump version for lasereyes (RC)
        if: ${{ needs.check-package-changes.outputs.lasereyes_changed == 'true' || needs.check-package-changes.outputs.lasereyes_core_changed == 'true' || needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          cd packages/lasereyes
          npm version prerelease --preid=rc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit RC version bumps
        if: ${{ needs.check-package-changes.outputs.lasereyes_changed == 'true' || needs.check-package-changes.outputs.lasereyes_core_changed == 'true' || needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          git add .
          git commit -m "RC version bump for packages"
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Promote to stable version when merging to main
  promote-to-stable-in-main:
    runs-on: ubuntu-latest
    needs: check-package-changes
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Promote lasereyes-core to stable version
        if: ${{ needs.check-package-changes.outputs.lasereyes_core_changed == 'true' }}
        run: |
          cd packages/lasereyes-core
          npm version --no-git-tag-version $(npm version patch | cut -d'-' -f1)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Promote lasereyes-react to stable version
        if: ${{ needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          cd packages/lasereyes-react
          npm version --no-git-tag-version $(npm version patch | cut -d'-' -f1)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Promote lasereyes to stable version
        if: ${{ needs.check-package-changes.outputs.lasereyes_changed == 'true' || needs.check-package-changes.outputs.lasereyes_core_changed == 'true' || needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          cd packages/lasereyes
          npm version --no-git-tag-version $(npm version patch | cut -d'-' -f1)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit stable version bumps for main
        if: ${{ needs.check-package-changes.outputs.lasereyes_changed == 'true' || needs.check-package-changes.outputs.lasereyes_core_changed == 'true' || needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          git add .
          git commit -m "Promote to stable version"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Generate release notes and create GitHub release
  generate-release-notes:
    runs-on: ubuntu-latest
    needs: promote-to-stable-in-main
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai==0.28 requests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Generate git diff
        run: |
          PREV_COMMIT=$(git rev-parse HEAD^1)
          git diff $PREV_COMMIT HEAD > changes.diff

      - name: Generate release notes with GPT
        run: |
          set -e
          python3 scripts/generate_release_notes.py
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Concatenate release notes
        run: |
          echo -e "\n$(cat detailed_release_notes.md)\n$(cat RELEASE_NOTES.md)" > RELEASE_NOTES.md
          git add RELEASE_NOTES.md
          git commit -m "Updated RELEASE_NOTES.md with new release"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ github.ref }}"
          release_name: "Release ${{ github.ref }}"
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # After promoting to main, update dev to the next RC version
  bump-next-rc-in-dev:
    runs-on: ubuntu-latest
    needs: generate-release-notes
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Bump lasereyes-core to next RC version
        if: ${{ needs.check-package-changes.outputs.lasereyes_core_changed == 'true' }}
        run: |
          cd packages/lasereyes-core
          npm version prerelease --preid=rc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump lasereyes-react to next RC version
        if: ${{ needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          cd packages/lasereyes-react
          npm version prerelease --preid=rc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump lasereyes to next RC version
        if: ${{ needs.check-package-changes.outputs.lasereyes_changed == 'true' || needs.check-package-changes.outputs.lasereyes_core_changed == 'true' || needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          cd packages/lasereyes
          npm version prerelease --preid=rc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit RC version bumps for dev
        if: ${{ needs.check-package-changes.outputs.lasereyes_changed == 'true' || needs.check-package-changes.outputs.lasereyes_core_changed == 'true' || needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          git add .
          git commit -m "Next RC version bump after stable release"
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
