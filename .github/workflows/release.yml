name: Release Workflow

on:
  push:
    branches:
      - dev
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Fetch all branches
        run: git fetch --all

      # Check if lasereyes packages changed
      - name: Check if lasereyes packages changed
        id: check_lasereyes_changes
        run: |
          if git diff --name-only HEAD^1 HEAD | grep -q 'packages/lasereyes/'; then
            echo "lasereyes_changed=true" >> $GITHUB_ENV
          else
            echo "lasereyes_changed=false" >> $GITHUB_ENV
          fi
          if git diff --name-only HEAD^1 HEAD | grep -q 'packages/lasereyes-core/'; then
            echo "lasereyes_core_changed=true" >> $GITHUB_ENV
          else
            echo "lasereyes_core_changed=false" >> $GITHUB_ENV
          fi
          if git diff --name-only HEAD^1 HEAD | grep -q 'packages/lasereyes-react/'; then
            echo "lasereyes_react_changed=true" >> $GITHUB_ENV
          else
            echo "lasereyes_react_changed=false" >> $GITHUB_ENV
          fi

      # Bump version for lasereyes-core (dev)
      - name: Bump version for lasereyes-core (dev)
        if: ${{ env.lasereyes_core_changed == 'true' && github.ref == 'refs/heads/dev' }}
        uses: ./.github/actions/bump-version-and-commit
        with:
          package_dir: 'packages/lasereyes-core'
          version_type: 'prerelease'
          preid: 'rc'

      # Publish lasereyes-core (RC)
      - name: Publish lasereyes-core (RC)
        if: ${{ env.lasereyes_core_changed == 'true' && github.ref == 'refs/heads/dev' }}
        uses: ./.github/actions/publish-to-npm
        with:
          package_dir: 'packages/lasereyes-core'
          tag: 'rc'

      # Bump version for lasereyes-react (dev)
      - name: Bump version for lasereyes-react (dev)
        if: ${{ env.lasereyes_react_changed == 'true' && github.ref == 'refs/heads/dev' }}
        uses: ./.github/actions/bump-version-and-commit
        with:
          package_dir: 'packages/lasereyes-react'
          version_type: 'prerelease'
          preid: 'rc'

      # Publish lasereyes-react (RC)
      - name: Publish lasereyes-react (RC)
        if: ${{ env.lasereyes_react_changed == 'true' && github.ref == 'refs/heads/dev' }}
        uses: ./.github/actions/publish-to-npm
        with:
          package_dir: 'packages/lasereyes-react'
          tag: 'rc'

      # Bump version for lasereyes (dev)
      - name: Bump version for lasereyes (dev)
        if: ${{ env.lasereyes_changed == 'true' && github.ref == 'refs/heads/dev' }}
        uses: ./.github/actions/bump-version-and-commit
        with:
          package_dir: 'packages/lasereyes'
          version_type: 'prerelease'
          preid: 'rc'

      # Publish lasereyes (RC)
      - name: Publish lasereyes (RC)
        if: ${{ env.lasereyes_changed == 'true' && github.ref == 'refs/heads/dev' }}
        uses: ./.github/actions/publish-to-npm
        with:
          package_dir: 'packages/lasereyes'
          tag: 'rc'

      # Sync main to dev after changes
      - name: Sync main to dev and bump dev version after merge
        if: ${{ github.ref == 'refs/heads/main' && (env.lasereyes_changed == 'true' || env.lasereyes_core_changed == 'true' || env.lasereyes_react_changed == 'true') }}
        run: |
          git checkout dev
          git pull origin dev
          git merge -X theirs origin/main
          if [[ "${{ env.lasereyes_changed }}" == "true" ]]; then
            cd packages/lasereyes
            npm version prerelease --preid=rc
            cd ../../
          fi
          if [[ "${{ env.lasereyes_core_changed }}" == "true" ]]; then
            cd packages/lasereyes-core
            npm version prerelease --preid=rc
            cd ../../
          fi
          if [[ "${{ env.lasereyes_react_changed }}" == "true" ]]; then
            cd packages/lasereyes-react
            npm version prerelease --preid=rc
            cd ../../
          fi
          git add .
          git commit -m "Bump dev versions after sync from main"
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Bump version for lasereyes-core (main)
      - name: Bump version for lasereyes-core (main)
        if: ${{ env.lasereyes_core_changed == 'true' && github.ref == 'refs/heads/main' }}
        uses: ./.github/actions/bump-version-and-commit
        with:
          package_dir: 'packages/lasereyes-core'
          version_type: 'patch'

      # Publish lasereyes-core to npm (main)
      - name: Publish lasereyes-core to npm (main)
        if: ${{ env.lasereyes_core_changed == 'true' && github.ref == 'refs/heads/main' }}
        uses: ./.github/actions/publish-to-npm
        with:
          package_dir: 'packages/lasereyes-core'
          tag: 'latest'

      # Bump version for lasereyes-react (main)
      - name: Bump version for lasereyes-react (main)
        if: ${{ env.lasereyes_react_changed == 'true' && github.ref == 'refs/heads/main' }}
        uses: ./.github/actions/bump-version-and-commit
        with:
          package_dir: 'packages/lasereyes-react'
          version_type: 'patch'

      # Publish lasereyes-react to npm (main)
      - name: Publish lasereyes-react to npm (main)
        if: ${{ env.lasereyes_react_changed == 'true' && github.ref == 'refs/heads/main' }}
        uses: ./.github/actions/publish-to-npm
        with:
          package_dir: 'packages/lasereyes-react'
          tag: 'latest'

      # Bump version for lasereyes (main)
      - name: Bump version for lasereyes (main)
        if: ${{ env.lasereyes_changed == 'true' && github.ref == 'refs/heads/main' }}
        uses: ./.github/actions/bump-version-and-commit
        with:
          package_dir: 'packages/lasereyes'
          version_type: 'patch'

      # Publish lasereyes to npm (main)
      - name: Publish lasereyes to npm (main)
        if: ${{ env.lasereyes_changed == 'true' && github.ref == 'refs/heads/main' }}
        uses: ./.github/actions/publish-to-npm
        with:
          package_dir: 'packages/lasereyes'
          tag: 'latest'

      # Release notes and GitHub Release steps for lasereyes only
      - name: Setup Python
        if: ${{ github.ref == 'refs/heads/main' && env.lasereyes_changed == 'true' }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        if: ${{ github.ref == 'refs/heads/main' && env.lasereyes_changed == 'true' }}
        run: |
          python -m pip install --upgrade pip
          pip install openai==0.28

      - name: Generate git diff
        if: ${{ github.ref == 'refs/heads/main' && env.lasereyes_changed == 'true' }}
        run: |
          PREV_COMMIT=$(git rev-parse HEAD^1)
          git diff $PREV_COMMIT HEAD > changes.diff

      - name: Generate release notes with GPT
        if: ${{ github.ref == 'refs/heads/main' && env.lasereyes_changed == 'true' }}
        run: |
          python3 scripts/generate_release_notes.py ${{ env.lasereyes_version }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Concatenate release notes
        if: ${{ github.ref == 'refs/heads/main' && env.lasereyes_changed == 'true' }}
        run: |
          echo -e "\n$(cat detailed_release_notes.md)\n$(cat RELEASE_NOTES.md)" > RELEASE_NOTES.md
          git add RELEASE_NOTES.md
          git commit -m "Updated RELEASE_NOTES.md with new release"
          git push origin main

      - name: Ensure single "v" in tag_name
        id: ensure_v
        if: ${{ github.ref == 'refs/heads/main' && env.lasereyes_changed == 'true' }}
        run: |
          if [[ "${{ env.lasereyes_version }}" == v* ]]; then
            echo "tag_name=${{ env.lasereyes_version }}" >> $GITHUB_ENV
          else
            echo "tag_name=v${{ env.lasereyes_version }}" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release for lasereyes
        if: ${{ github.ref == 'refs/heads/main' && env.lasereyes_changed == 'true' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ env.tag_name }}"
          release_name: "Release ${{ env.tag_name }}"
          body_path: detailed_release_notes.md
          draft: false
          prerelease: false

