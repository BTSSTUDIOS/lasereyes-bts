name: Release

on:
  push:
    branches:
      - dev
      - main

permissions:
  contents: write

jobs:
  # Check for changes and output flags
  check-package-changes:
    runs-on: ubuntu-latest
    outputs:
      lasereyes_changed: ${{ steps.check.outputs.lasereyes_changed }}
      lasereyes_core_changed: ${{ steps.check.outputs.lasereyes_core_changed }}
      lasereyes_react_changed: ${{ steps.check.outputs.lasereyes_react_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch all branches
        run: git fetch --all

      - name: Debug - Print diff output
        run: |
          echo "Changes between merge base and HEAD:"
          git diff --name-only $(git merge-base origin/main HEAD) HEAD

      - name: Check if packages changed
        id: check
        run: |
          merge_base=$(git merge-base origin/main HEAD)

          # Check lasereyes package (added or modified files only)
          if git diff --name-only --diff-filter=AM $merge_base HEAD -- packages/lasereyes/ | grep -q .; then
            echo "lasereyes_changed=true" >> $GITHUB_ENV
            echo "lasereyes_changed=true" >> $GITHUB_OUTPUT
          else
            echo "lasereyes_changed=false" >> $GITHUB_ENV
            echo "lasereyes_changed=false" >> $GITHUB_OUTPUT
          fi

          # Check lasereyes-core package (added or modified files only)
          if git diff --name-only --diff-filter=AM $merge_base HEAD -- packages/lasereyes-core/ | grep -q .; then
            echo "lasereyes_core_changed=true" >> $GITHUB_ENV
            echo "lasereyes_core_changed=true" >> $GITHUB_OUTPUT
          else
            echo "lasereyes_core_changed=false" >> $GITHUB_ENV
            echo "lasereyes_core_changed=false" >> $GITHUB_OUTPUT
          fi

          # Check lasereyes-react package (added or modified files only)
          if git diff --name-only --diff-filter=AM $merge_base HEAD -- packages/lasereyes-react/ | grep -q .; then
            echo "lasereyes_react_changed=true" >> $GITHUB_ENV
            echo "lasereyes_react_changed=true" >> $GITHUB_OUTPUT
          else
            echo "lasereyes_react_changed=false" >> $GITHUB_ENV
            echo "lasereyes_react_changed=false" >> $GITHUB_OUTPUT
          fi


  # Release candidate bumps in dev branch
  bump-rc-in-dev:
    runs-on: ubuntu-latest
    needs: check-package-changes
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Check the is changed for all packages
        run: |
          echo ${{ needs.check-package-changes.outputs.lasereyes_changed }}
          echo ${{ needs.check-package-changes.outputs.lasereyes_core_changed }}
          echo ${{ needs.check-package-changes.outputs.lasereyes_react_changed }}

      - name: Bump lasereyes-core to next RC version
        if: ${{ needs.check-package-changes.outputs.lasereyes_core_changed == 'true' }}
        run: |
          cd packages/lasereyes-core
          npm version prerelease --preid=rc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump lasereyes-react to next RC version
        if: ${{ needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          cd packages/lasereyes-react
          npm version prerelease --preid=rc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump lasereyes to next RC version
        if: ${{  needs.check-package-changes.outputs.lasereyes_changed == 'true' || needs.check-package-changes.outputs.lasereyes_core_changed == 'true' || needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          cd packages/lasereyes
          npm version prerelease --preid=rc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure git user
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit RC version bumps
        if: ${{ needs.check-package-changes.outputs.lasereyes_changed == 'true' || needs.check-package-changes.outputs.lasereyes_core_changed == 'true' || needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          git add .
          git commit -m "RC version bump for packages"
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Promote to stable version in main
  promote-to-stable-in-main:
    runs-on: ubuntu-latest
    needs: check-package-changes
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Promote lasereyes-core to stable version
        if: ${{ needs.check-package-changes.outputs.lasereyes_core_changed == 'true' }}
        run: |
          cd packages/lasereyes-core
          npm version --no-git-tag-version $(npm version patch | cut -d'-' -f1)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Promote lasereyes-react to stable version
        if: ${{ needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          cd packages/lasereyes-react
          npm version --no-git-tag-version $(npm version patch | cut -d'-' -f1)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Promote lasereyes to stable version
        if: ${{ needs.check-package-changes.outputs.lasereyes_changed == 'true' || needs.check-package-changes.outputs.lasereyes_core_changed == 'true' || needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          cd packages/lasereyes
          npm version --no-git-tag-version $(npm version patch | cut -d'-' -f1)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure git user
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit stable version bumps for main
        if: ${{ needs.check-package-changes.outputs.lasereyes_changed == 'true' || needs.check-package-changes.outputs.lasereyes_core_changed == 'true' || needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          git add .
          git commit -m "Promote to stable version"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Merge main into dev to sync branches
  merge-main-into-dev:
    runs-on: ubuntu-latest
    needs: promote-to-stable-in-main
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Configure git user
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Checkout dev branch
        run: |
          git checkout dev
          git fetch origin
          git merge origin/main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push merge to dev
        run: |
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Bump next RC version in dev
  bump-next-rc-in-dev:
    runs-on: ubuntu-latest
    needs: merge-main-into-dev
    steps:
      - name: Checkout dev branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: dev

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Bump lasereyes-core to next RC version
        if: ${{ needs.check-package-changes.outputs.lasereyes_core_changed == 'true' }}
        run: |
          cd packages/lasereyes-core
          npm version prerelease --preid=rc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump lasereyes-react to next RC version
        if: ${{ needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          cd packages/lasereyes-react
          npm version prerelease --preid=rc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump lasereyes to next RC version
        if: ${{ needs.check-package-changes.outputs.lasereyes_changed == 'true' || needs.check-package-changes.outputs.lasereyes_core_changed == 'true' || needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          cd packages/lasereyes
          npm version prerelease --preid=rc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure git user
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit RC version bumps for dev
        if: ${{ needs.check-package-changes.outputs.lasereyes_changed == 'true' || needs.check-package-changes.outputs.lasereyes_core_changed == 'true' || needs.check-package-changes.outputs.lasereyes_react_changed == 'true' }}
        run: |
          git add .
          git commit -m "Next RC version bump after stable release"
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
