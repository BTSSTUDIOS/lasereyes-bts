name: Release

on:
  push:
    branches:
      - dev
      - main

permissions:
  contents: write

jobs:
  # Check for package changes
  check-package-changes:
    runs-on: ubuntu-latest
    outputs:
      lasereyes_changed: ${{ steps.check.outputs.lasereyes_changed }}
      lasereyes_core_changed: ${{ steps.check.outputs.lasereyes_core_changed }}
      lasereyes_react_changed: ${{ steps.check.outputs.lasereyes_react_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch all branches
        run: git fetch --all

      - name: Determine diff comparison strategy
        id: diff-strategy
        run: |
          if [ "${{ github.ref }}" == "refs/heads/dev" ]; then
            echo "diff_target=HEAD^1" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "diff_target=HEAD^1" >> $GITHUB_ENV
          fi

      - name: Check if packages changed
        id: check
        run: |
          diff_target=${{ env.diff_target }}

          if git diff --name-only --diff-filter=AM $diff_target HEAD -- packages/lasereyes/ | grep -q '^packages/lasereyes/'; then
            echo "lasereyes_changed=true" >> $GITHUB_ENV
            echo "lasereyes_changed=true" >> $GITHUB_OUTPUT
          else
            echo "lasereyes_changed=false" >> $GITHUB_ENV
            echo "lasereyes_changed=false" >> $GITHUB_OUTPUT
          fi

          if git diff --name-only --diff-filter=AM $diff_target HEAD -- packages/lasereyes-core/ | grep -q '^packages/lasereyes-core/'; then
            echo "lasereyes_core_changed=true" >> $GITHUB_ENV
            echo "lasereyes_core_changed=true" >> $GITHUB_OUTPUT
          else
            echo "lasereyes_core_changed=false" >> $GITHUB_ENV
            echo "lasereyes_core_changed=false" >> $GITHUB_OUTPUT
          fi

          if git diff --name-only --diff-filter=AM $diff_target HEAD -- packages/lasereyes-react/ | grep -q '^packages/lasereyes-react/'; then
            echo "lasereyes_react_changed=true" >> $GITHUB_ENV
            echo "lasereyes_react_changed=true" >> $GITHUB_OUTPUT
          else
            echo "lasereyes_react_changed=false" >> $GITHUB_ENV
            echo "lasereyes_react_changed=false" >> $GITHUB_OUTPUT
          fi

  # Bump RC version in dev branch only if necessary, and skip if it's on the main branch
  bump-rc-in-dev:
    runs-on: ubuntu-latest
    needs: check-package-changes
    if: github.ref == 'refs/heads/dev' &&
      (needs.check-package-changes.outputs.lasereyes_changed == 'true' ||
      needs.check-package-changes.outputs.lasereyes_core_changed == 'true' ||
      needs.check-package-changes.outputs.lasereyes_react_changed == 'true')
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Create .npmrc file
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Bump versions sequentially if packages changed
        run: |
          # Bump lasereyes if any package has changed
          if [[ "${{ needs.check-package-changes.outputs.lasereyes_changed }}" == "true" || \
                "${{ needs.check-package-changes.outputs.lasereyes_core_changed }}" == "true" || \
                "${{ needs.check-package-changes.outputs.lasereyes_react_changed }}" == "true" ]]; then
              cd packages/lasereyes
              pnpm version prerelease --preid=rc
              cd ../..
          fi

          # Bump lasereyes-core if changed
          if [[ "${{ needs.check-package-changes.outputs.lasereyes_core_changed }}" == "true" ]]; then
              cd packages/lasereyes-core
              pnpm version prerelease --preid=rc
              cd ../..
          fi

          # Bump lasereyes-react if changed
          if [[ "${{ needs.check-package-changes.outputs.lasereyes_react_changed }}" == "true" ]]; then
              cd packages/lasereyes-react
              pnpm version prerelease --preid=rc
              cd ../..
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Configure git user
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit RC version bumps for all packages
        run: |
          git add .
          git commit -m "RC version bump for all changed packages"
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  # Promote to stable version in main
  promote-to-stable-in-main:
    runs-on: ubuntu-latest
    needs: check-package-changes
    if: github.ref == 'refs/heads/main'
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Build all packages
        run: pnpm -r build

      - name: Create .npmrc file
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Debug NPM Token
        run: |
          echo "NODE_AUTH_TOKEN is set to: ${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Promote lasereyes version if any package changed
        if: needs.check-package-changes.outputs.lasereyes_changed == 'true' ||
          needs.check-package-changes.outputs.lasereyes_core_changed == 'true' ||
          needs.check-package-changes.outputs.lasereyes_react_changed == 'true'
        run: |
          cd packages/lasereyes
          pnpm version patch
          cd ../..
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Promote lasereyes-core version
        if: needs.check-package-changes.outputs.lasereyes_core_changed == 'true'
        run: |
          cd packages/lasereyes-core
          pnpm version patch
          pnpm publish --access public --no-git-checks
          cd ../..
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Promote lasereyes-react version
        if: needs.check-package-changes.outputs.lasereyes_react_changed == 'true'
        run: |
          cd packages/lasereyes-react
          pnpm version patch
          pnpm publish --access public --no-git-checks
          cd ../..

      - name: Configure git user
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit stable version bumps for all packages
        run: |
          git add .
          git commit -m "Stable version bump for all changed packages"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Merge main into dev to sync branches
  merge-main-into-dev:
    runs-on: ubuntu-latest
    needs: promote-to-stable-in-main
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Configure git user
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Checkout dev branch
        run: |
          git checkout dev
          git fetch origin
          git merge -s recursive -X theirs origin/main || echo "Handled merge conflicts with 'theirs' strategy"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push merge to dev
        run: |
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  bump-next-rc-in-dev:
    runs-on: ubuntu-latest
    needs:
      - merge-main-into-dev
      - check-package-changes
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: dev

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.6.6 --activate

      - name: Install dependencies
        run: pnpm install

      # Debugging Step: Log the outputs to check if they're correctly set
      - name: Log outputs from check-package-changes
        run: |
          echo "Lasereyes changed: ${{ needs.check-package-changes.outputs.lasereyes_changed }}"
          echo "Lasereyes-core changed: ${{ needs.check-package-changes.outputs.lasereyes_core_changed }}"
          echo "Lasereyes-react changed: ${{ needs.check-package-changes.outputs.lasereyes_react_changed }}"

      - name: Bump lasereyes version if any package changed
        if: needs.check-package-changes.outputs.lasereyes_changed == 'true' ||
          needs.check-package-changes.outputs.lasereyes_core_changed == 'true' ||
          needs.check-package-changes.outputs.lasereyes_react_changed == 'true'
        run: |
          cd packages/lasereyes
          pnpm version prerelease --preid=rc

      - name: Bump lasereyes-core version if changed
        if: needs.check-package-changes.outputs.lasereyes_core_changed == 'true'
        run: |
          cd packages/lasereyes-core
          pnpm version prerelease --preid=rc

      - name: Bump lasereyes-react version if changed
        if: needs.check-package-changes.outputs.lasereyes_react_changed == 'true'
        run: |
          cd packages/lasereyes-react
          pnpm version prerelease --preid=rc

      - name: Configure git user
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit RC version bumps for all packages
        if: needs.check-package-changes.outputs.lasereyes_changed == 'true' ||
          needs.check-package-changes.outputs.lasereyes_core_changed == 'true' ||
          needs.check-package-changes.outputs.lasereyes_react_changed == 'true'
        run: |
          git add .
          git commit -m "Next RC version bump for all changed packages"
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
